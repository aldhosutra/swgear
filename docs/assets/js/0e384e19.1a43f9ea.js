"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[976],{2053:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>t,default:()=>d,frontMatter:()=>c,metadata:()=>s,toc:()=>i});const s=JSON.parse('{"id":"intro","title":"intro","description":"Header","source":"@site/docs/intro.md","sourceDirName":".","slug":"/intro","permalink":"/docs/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/aldhosutra/swgr/docs/intro.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar"}');var a=r(4848),l=r(8453);const c={sidebar_position:1},t="swgr",o={},i=[{value:"<code>swgr benchmark [SPEC]</code>",id:"swgr-benchmark-spec",level:2},{value:"<code>swgr client [FILE]</code>",id:"swgr-client-file",level:2},{value:"<code>swgr help [COMMAND]</code>",id:"swgr-help-command",level:2}];function p(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{src:"https://raw.githubusercontent.com/aldhosutra/swgr/HEAD/website/static/img/docusaurus-social-card.jpg",alt:"Header"})}),"\n",(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"swgr",children:"swgr"})}),"\n",(0,a.jsx)(n.p,{children:"A CLI suite to supercharge your Swagger/OpenAPI workflow"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"https://oclif.io",children:(0,a.jsx)(n.img,{src:"https://img.shields.io/badge/cli-oclif-brightgreen.svg",alt:"oclif"})}),"\n",(0,a.jsx)(n.a,{href:"https://npmjs.org/package/swgr",children:(0,a.jsx)(n.img,{src:"https://img.shields.io/npm/v/swgr.svg",alt:"Version"})}),"\n",(0,a.jsx)(n.a,{href:"https://npmjs.org/package/swgr",children:(0,a.jsx)(n.img,{src:"https://img.shields.io/npm/dw/swgr.svg",alt:"Downloads/week"})})]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"#swgr",children:"swgr"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"#usage",children:"Usage"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"#commands",children:"Commands"})}),"\n"]}),"\n",(0,a.jsx)(n.h1,{id:"usage",children:"Usage"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh-session",children:"$ npm install -g swgr\n$ swgr COMMAND\nrunning command...\n$ swgr (--version)\nswgr/0.0.0 darwin-arm64 node-v18.20.3\n$ swgr --help [COMMAND]\nUSAGE\n  $ swgr COMMAND\n...\n"})}),"\n",(0,a.jsx)(n.h1,{id:"commands",children:"Commands"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"#swgr-benchmark-spec",children:(0,a.jsx)(n.code,{children:"swgr benchmark [SPEC]"})})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"#swgr-client-file",children:(0,a.jsx)(n.code,{children:"swgr client [FILE]"})})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"#swgr-help-command",children:(0,a.jsx)(n.code,{children:"swgr help [COMMAND]"})})}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"swgr-benchmark-spec",children:(0,a.jsx)(n.code,{children:"swgr benchmark [SPEC]"})}),"\n",(0,a.jsx)(n.p,{children:"Run HTTP benchmarks against an OpenAPI/Swagger spec or API, with optional thresholds for CI/CD."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:'USAGE\n  $ swgr benchmark [SPEC] [--compare-label <value>] [-w <value>] [-c <value>] [-d <value>] [--grade-range\n    <value>] [--grade-threshold Excellent|Good|Acceptable|Needs Improvement] [--label <value>] [--latency-threshold\n    <value>] [-o <value>] [--p50-range <value>] [--p90-range <value>] [--p99-range <value>] [--param <value>...] [-p\n    <value>...] [--rps-range <value>] [--sort-by p50|p90|p99|rps] [-s <value>] [--throughput-threshold <value>] [-u\n    <value>]\n\nARGUMENTS\n  SPEC  OpenAPI/Swagger spec file or URL (positional)\n\nFLAGS\n  -c, --connections=<value>           [default: 10] Number of concurrent connections\n  -d, --duration=<value>              [default: 10] Duration of the benchmark in seconds\n  -o, --output=<value>                Output file\n  -p, --plugins=<value>...            [default: ] Plugins to load\n  -s, --spec=<value>                  OpenAPI/Swagger spec file or URL\n  -u, --url=<value>                   Base URL for the API\n  -w, --compare-with=<value>          Comparison URL or report\n      --compare-label=<value>         [default: Benchmark Baseline] Label for the comparison run\n      --grade-range=<value>           Custom grading ranges for p50, p90, p99, and rps as comma-separated values.\n                                      Example: "p50=50,150,300;p90=100,300,500;p99=200,500,1000;rps=100,20,10". Each\n                                      value is Excellent,Good,Acceptable.\n      --grade-threshold=<option>      Minimum allowed final grade for the benchmark (Excellent, Good, Acceptable, Needs\n                                      Improvement). Fails if the overall grade is worse.\n                                      <options: Excellent|Good|Acceptable|Needs Improvement>\n      --label=<value>                 [default: Benchmark Report] Label for this benchmark run\n      --latency-threshold=<value>     Maximum allowed latency (ms) for p90/p95\n      --p50-range=<value>             Custom grading range for p50 as comma-separated values: Excellent,Good,Acceptable.\n                                      Example: "50,150,300"\n      --p90-range=<value>             Custom grading range for p90 as comma-separated values: Excellent,Good,Acceptable.\n                                      Example: "100,300,500"\n      --p99-range=<value>             Custom grading range for p99 as comma-separated values: Excellent,Good,Acceptable.\n                                      Example: "200,500,1000"\n      --param=<value>...              [default: ] Set default value for path parameters, e.g. --param petId=123. Can be\n                                      used multiple times.\n      --rps-range=<value>             Custom grading range for rps as comma-separated values: Excellent,Good,Acceptable.\n                                      Example: "100,20,10"\n      --sort-by=<option>              [default: p50] Sort comparison output by this metric (p50, p90, p99, rps)\n                                      <options: p50|p90|p99|rps>\n      --throughput-threshold=<value>  Minimum allowed throughput (RPS)\n\nDESCRIPTION\n  Run HTTP benchmarks against an OpenAPI/Swagger spec or API, with optional thresholds for CI/CD.\n\nEXAMPLES\n  $ swgr benchmark https://api.example.com/api.yaml\n\n  $ swgr benchmark api.yaml --url https://api.example.com\n\n  $ swgr benchmark --spec api.yaml --url https://api.example.com\n\n  $ swgr benchmark api.yaml --url https://api.example.com --latency-threshold 200 --throughput-threshold 1000\n\n  $ swgr benchmark api.yaml --url https://api.example.com --compare-with https://api.staging.com\n\n  $ swgr benchmark api.yaml --url https://api.example.com --output result.json\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsxs)(n.em,{children:["See code: ",(0,a.jsx)(n.a,{href:"https://github.com/aldhosutra/swgr/blob/v0.0.0/src/commands/benchmark/index.ts",children:"src/commands/benchmark/index.ts"})]})}),"\n",(0,a.jsx)(n.h2,{id:"swgr-client-file",children:(0,a.jsx)(n.code,{children:"swgr client [FILE]"})}),"\n",(0,a.jsx)(n.p,{children:"Generate a TypeScript client from your OpenAPI/Swagger spec. (COMING SOON)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"USAGE\n  $ swgr client [FILE] [-f] [-n <value>]\n\nARGUMENTS\n  FILE  file to read\n\nFLAGS\n  -f, --force\n  -n, --name=<value>  name to print\n\nDESCRIPTION\n  Generate a TypeScript client from your OpenAPI/Swagger spec. (COMING SOON)\n\nEXAMPLES\n  $ swgr client\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsxs)(n.em,{children:["See code: ",(0,a.jsx)(n.a,{href:"https://github.com/aldhosutra/swgr/blob/v0.0.0/src/commands/client/index.ts",children:"src/commands/client/index.ts"})]})}),"\n",(0,a.jsx)(n.h2,{id:"swgr-help-command",children:(0,a.jsx)(n.code,{children:"swgr help [COMMAND]"})}),"\n",(0,a.jsx)(n.p,{children:"Display help for swgr."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"USAGE\n  $ swgr help [COMMAND...] [-n]\n\nARGUMENTS\n  COMMAND...  Command to show help for.\n\nFLAGS\n  -n, --nested-commands  Include all nested commands in the output.\n\nDESCRIPTION\n  Display help for swgr.\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsxs)(n.em,{children:["See code: ",(0,a.jsx)(n.a,{href:"https://github.com/oclif/plugin-help/blob/v6.2.29/src/commands/help.ts",children:"@oclif/plugin-help"})]})})]})}function d(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}}}]);